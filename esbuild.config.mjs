import 'dotenv/config'
import esbuild from 'esbuild'
import process from 'node:process'
import builtins from 'builtin-modules'
import { copy } from 'esbuild-plugin-copy'
import postCssPlugin from '@deanc/esbuild-plugin-postcss'
import tailwindcss from '@tailwindcss/postcss'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const prod = process.argv[2] === 'production'

const context = await esbuild.context({
  plugins: [
    postCssPlugin({
      plugins: [tailwindcss],
    }),
    copy({
      resolveFrom: 'cwd',
      assets: [
        {
          from: 'manifest.json',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/obsidian-drawing/manifest.json`,
        },
        {
          from: './dist/main.js',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/obsidian-drawing/main.js`,
        },
        {
          from: './dist/styles.css',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/obsidian-drawing/styles.css`,
        },
      ],
    }),
  ],
  banner: {
    js: banner,
  },
  entryPoints: [
    { in: './src/main.ts', out: 'main' },
    { in: './src/styles.css', out: 'styles' },
  ],
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins,
  ],
  format: 'cjs',
  target: 'es2018',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outdir: 'dist',
})

if (prod) {
  await context.rebuild()
  process.exit(0)
} else {
  await context.watch()
}
